Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o (exit)
/usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcat.o)
                              ./main.o (strcat)
/usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcpy.o)
                              ./main.o (strcpy)
/usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(itoa.o)
                              ./main.o (itoa)
/usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(utoa.o)
                              ./main.o (utoa)
/usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

richtung            0x1               ./main.o
esuml               0x2               ./main.o
S                   0x1               ./main.o
esum                0x2               ./main.o
esumr               0x2               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xed6
 *(.vectors)
 .vectors       0x0000000000000000       0x94 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000094                . = ALIGN (0x2)
                0x0000000000000094                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000094        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000094                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000094                __ctors_start = .
 *(.ctors)
                0x0000000000000094                __ctors_end = .
                0x0000000000000094                __dtors_start = .
 *(.dtors)
                0x0000000000000094                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000094        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o
                0x0000000000000094                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000094        0xc /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000a0       0x1a /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
                0x00000000000000a0                __do_copy_data
 .init4         0x00000000000000ba       0x10 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
                0x00000000000000ba                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000ca        0x8 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000d2        0x4 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o
                0x00000000000000d2                __vector_22
                0x00000000000000d2                __vector_28
                0x00000000000000d2                __vector_1
                0x00000000000000d2                __vector_34
                0x00000000000000d2                __vector_24
                0x00000000000000d2                __vector_12
                0x00000000000000d2                __bad_interrupt
                0x00000000000000d2                __vector_6
                0x00000000000000d2                __vector_31
                0x00000000000000d2                __vector_35
                0x00000000000000d2                __vector_23
                0x00000000000000d2                __vector_30
                0x00000000000000d2                __vector_25
                0x00000000000000d2                __vector_11
                0x00000000000000d2                __vector_13
                0x00000000000000d2                __vector_17
                0x00000000000000d2                __vector_19
                0x00000000000000d2                __vector_7
                0x00000000000000d2                __vector_27
                0x00000000000000d2                __vector_5
                0x00000000000000d2                __vector_33
                0x00000000000000d2                __vector_9
                0x00000000000000d2                __vector_2
                0x00000000000000d2                __vector_21
                0x00000000000000d2                __vector_15
                0x00000000000000d2                __vector_36
                0x00000000000000d2                __vector_29
                0x00000000000000d2                __vector_8
                0x00000000000000d2                __vector_26
                0x00000000000000d2                __vector_14
                0x00000000000000d2                __vector_10
                0x00000000000000d2                __vector_16
                0x00000000000000d2                __vector_18
                0x00000000000000d2                __vector_20
 .text          0x00000000000000d6      0xd04 ./main.o
                0x00000000000000d6                init
                0x0000000000000176                lineInit
                0x000000000000017c                distInit
                0x0000000000000184                stopall
                0x00000000000001c6                setSpeed_1
                0x00000000000001f0                steuer
                0x0000000000000208                setSpeed_2
                0x0000000000000232                setMotorBaseSpeed_1
                0x0000000000000258                setMotorBaseSpeed_2
                0x000000000000027e                modMotorBaseSpeed_1
                0x00000000000002c4                modMotorBaseSpeed_2
                0x000000000000030a                modMotorSpeed_1
                0x0000000000000350                modMotorSpeed_2
                0x0000000000000396                setMotorSpeed_1
                0x00000000000003a0                setMotorSpeed_2
                0x00000000000003aa                adjSpeed
                0x0000000000000426                pushButton
                0x00000000000004d8                setADC
                0x0000000000000500                getData
                0x000000000000051e                __vector_3
                0x0000000000000560                __vector_4
                0x00000000000005a2                line
                0x0000000000000732                dist
                0x000000000000084a                strecke
                0x0000000000000962                blink
                0x00000000000009c8                display
                0x0000000000000a5c                bar
                0x0000000000000af8                USART1_Transmit
                0x0000000000000b06                uart_puts
                0x0000000000000b22                handle_command
                0x0000000000000cba                __vector_32
 .text          0x0000000000000dda        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000dda        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000dda        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000dda        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcat.o)
 .text          0x0000000000000dda        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcpy.o)
 .text          0x0000000000000dda        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(itoa.o)
 .text          0x0000000000000dda        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(utoa.o)
 .text          0x0000000000000dda        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strrev.o)
 .text          0x0000000000000dda        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000000dda                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000dda       0x1e ./main.o
                0x0000000000000dda                main
 .text.libgcc.mul
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000df8        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000000df8       0x16 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcat.o)
                0x0000000000000df8                strcat
 .text.avr-libc
                0x0000000000000e0e        0xe /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcpy.o)
                0x0000000000000e0e                strcpy
 .text.avr-libc
                0x0000000000000e1c       0x42 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(itoa.o)
                0x0000000000000e1c                itoa
 .text.avr-libc
                0x0000000000000e5e       0x2c /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(utoa.o)
                0x0000000000000e5e                utoa
 .text.avr-libc
                0x0000000000000e8a       0x20 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000000e8a                strrev
 .text.libgcc.mul
                0x0000000000000eaa        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000eaa       0x28 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000000eaa                __udivmodhi4
 .text.libgcc   0x0000000000000ed2        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000ed2        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000ed2        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000ed2        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000000ed2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000ed2        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
                0x0000000000000ed2                exit
                0x0000000000000ed2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000ed2        0x4 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000ed6                _etext = .

.data           0x0000000000800100       0x30 load address 0x0000000000000ed6
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o
 .data          0x0000000000800100        0x0 ./main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcat.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcpy.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(itoa.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(utoa.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strrev.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800100       0x2f ./main.o
 *(.gnu.linkonce.d*)
                0x0000000000800130                . = ALIGN (0x2)
 *fill*         0x000000000080012f        0x1 00
                0x0000000000800130                _edata = .
                0x0000000000800130                PROVIDE (__data_end, .)

.bss            0x0000000000800130       0x39
                0x0000000000800130                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800130        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o
 .bss           0x0000000000800130       0x31 ./main.o
                0x0000000000800130                Motor_2_adjSpeed
                0x0000000000800132                Motor_1_adjSpeed
                0x0000000000800134                Motor_old_2_Speed
                0x0000000000800136                Motor_old_1_Speed
                0x0000000000800138                Motor_2_Speed
                0x000000000080013a                Motor_1_Speed
                0x000000000080013c                uart_string
                0x000000000080015b                uart_str_count
                0x000000000080015c                uart_str_complete
                0x000000000080015d                ticksrechts
                0x000000000080015f                tickslinks
 .bss           0x0000000000800161        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800161        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800161        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800161        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcat.o)
 .bss           0x0000000000800161        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcpy.o)
 .bss           0x0000000000800161        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(itoa.o)
 .bss           0x0000000000800161        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(utoa.o)
 .bss           0x0000000000800161        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strrev.o)
 .bss           0x0000000000800161        0x0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800161        0x8 ./main.o
                0x0000000000800161                richtung
                0x0000000000800162                esuml
                0x0000000000800164                S
                0x0000000000800165                esum
                0x0000000000800167                esumr
                0x0000000000800169                PROVIDE (__bss_end, .)
                0x0000000000000ed6                __data_load_start = LOADADDR (.data)
                0x0000000000000f06                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800169        0x0
                0x0000000000800169                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800169                PROVIDE (__noinit_end, .)
                0x0000000000800169                _end = .
                0x0000000000800169                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x2c04
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o
 .stab          0x00000000000006cc     0x1d10 ./main.o
                                       0x1d1c (size before relaxing)
 .stab          0x00000000000023dc       0x6c /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000002448       0xf0 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_copy_data.o)
                                         0xfc (size before relaxing)
 .stab          0x0000000000002538       0xb4 /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)
 .stab          0x00000000000025ec       0x9c /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcat.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000002688       0x6c /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strcpy.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000026f4      0x1b0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x00000000000028a4      0x12c /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(utoa.o)
                                        0x138 (size before relaxing)
 .stab          0x00000000000029d0       0xd8 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/libc.a(strrev.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000002aa8      0x15c /usr/lib/gcc/avr/4.7.1/avr51/libgcc.a(_udivmodhi4.o)
                                        0x168 (size before relaxing)

.stabstr        0x0000000000000000      0xfe5
 *(.stabstr)
 .stabstr       0x0000000000000000      0xfe5 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/avr51/crtcan128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./main.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(PKESintro.elf elf32-avr)
LOAD linker stubs
